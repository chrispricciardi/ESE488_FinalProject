$date
	Fri Dec  1 16:45:53 2017
$end

$version
	Synopsys VCS version J-2014.12-SP1-1_Full64
$end

$timescale
	1ps
$end

$comment Csum: 1 fdc4b517202fed23 $end


$scope module top_tb $end
$var reg 1 ! clk $end
$var reg 1 " we $end
$var reg 18 # address_1 [17:0] $end
$var reg 12 $ address_2 [11:0] $end
$var reg 1 % reset $end

$scope module DUT $end
$var wire 1 ! clk $end
$var wire 1 % reset $end
$var wire 1 " we_1 $end
$var wire 1 & we_2 $end
$var wire 1 & we_3 $end
$var wire 18 # address_1 [17:0] $end
$var wire 12 $ address_2 [11:0] $end
$var wire 10 ' address_3 [9:0] $end
$var wire 16 ( d1 [15:0] $end
$var wire 16 ) d2 [15:0] $end
$var wire 16 * d3 [15:0] $end
$var wire 16 + d4 [15:0] $end
$var wire 16 , d5 [15:0] $end
$var wire 16 - d6 [15:0] $end
$var wire 16 . d7 [15:0] $end
$var wire 16 / d8 [15:0] $end
$var wire 16 0 d9 [15:0] $end
$var wire 16 1 d10 [15:0] $end
$var wire 16 2 in_1 [15:0] $end
$var wire 16 3 in_2 [15:0] $end
$var wire 16 4 in_3 [15:0] $end
$var wire 16 5 in_4 [15:0] $end
$var wire 16 6 in_5 [15:0] $end
$var wire 16 7 in_6 [15:0] $end
$var wire 16 8 in_7 [15:0] $end
$var wire 16 9 in_8 [15:0] $end
$var wire 16 : in_9 [15:0] $end
$var wire 16 ; in_10 [15:0] $end
$var wire 16 < dw1 [15:0] $end
$var wire 16 = dw2 [15:0] $end
$var wire 16 > weight_1 [15:0] $end
$var wire 16 ? weight_2 [15:0] $end

$scope module SRAM_INPUT1 $end
$var wire 1 @ clk $end
$var wire 1 & we $end
$var wire 16 ( d [15:0] $end
$var wire 10 ' address [9:0] $end
$var reg 16 A q [15:0] $end
$upscope $end


$scope module SRAM_INPUT2 $end
$var wire 1 @ clk $end
$var wire 1 & we $end
$var wire 16 ) d [15:0] $end
$var wire 10 ' address [9:0] $end
$var reg 16 B q [15:0] $end
$upscope $end


$scope module SRAM_INPUT3 $end
$var wire 1 @ clk $end
$var wire 1 & we $end
$var wire 16 * d [15:0] $end
$var wire 10 ' address [9:0] $end
$var reg 16 C q [15:0] $end
$upscope $end


$scope module SRAM_INPUT4 $end
$var wire 1 @ clk $end
$var wire 1 & we $end
$var wire 16 + d [15:0] $end
$var wire 10 ' address [9:0] $end
$var reg 16 D q [15:0] $end
$upscope $end


$scope module SRAM_INPUT5 $end
$var wire 1 @ clk $end
$var wire 1 & we $end
$var wire 16 , d [15:0] $end
$var wire 10 ' address [9:0] $end
$var reg 16 E q [15:0] $end
$upscope $end


$scope module SRAM_INPUT6 $end
$var wire 1 @ clk $end
$var wire 1 & we $end
$var wire 16 - d [15:0] $end
$var wire 10 ' address [9:0] $end
$var reg 16 F q [15:0] $end
$upscope $end


$scope module SRAM_INPUT7 $end
$var wire 1 @ clk $end
$var wire 1 & we $end
$var wire 16 . d [15:0] $end
$var wire 10 ' address [9:0] $end
$var reg 16 G q [15:0] $end
$upscope $end


$scope module SRAM_INPUT8 $end
$var wire 1 @ clk $end
$var wire 1 & we $end
$var wire 16 / d [15:0] $end
$var wire 10 ' address [9:0] $end
$var reg 16 H q [15:0] $end
$upscope $end


$scope module SRAM_INPUT9 $end
$var wire 1 @ clk $end
$var wire 1 & we $end
$var wire 16 0 d [15:0] $end
$var wire 10 ' address [9:0] $end
$var reg 16 I q [15:0] $end
$upscope $end


$scope module SRAM_INPUT10 $end
$var wire 1 @ clk $end
$var wire 1 & we $end
$var wire 16 1 d [15:0] $end
$var wire 10 ' address [9:0] $end
$var reg 16 J q [15:0] $end
$upscope $end


$scope module SRAM_WEIGHT1 $end
$var wire 1 ! clk $end
$var wire 1 " we $end
$var wire 16 < d [15:0] $end
$var wire 18 # address [17:0] $end
$var reg 16 > q [15:0] $end
$upscope $end


$scope module SRAM_WEIGHT2 $end
$var wire 1 ! clk $end
$var wire 1 & we $end
$var wire 16 = d [15:0] $end
$var wire 12 $ address [11:0] $end
$var reg 16 ? q [15:0] $end
$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end

#0
$dumpvars
0!
1%
0"
bxxxxxxxxxxxxxxxx ?
bxxxxxxxxxxxxxxxxxx #
bxxxxxxxxxxxx $
bzzzzzzzzzzzzzzzz <
bzzzzzzzzzzzzzzzz =
bxxxxxxxxxxxxxxxx >
bxxxxxxxxxxxxxxxx A
bxxxxxxxxxxxxxxxx B
bxxxxxxxxxxxxxxxx C
bxxxxxxxxxxxxxxxx D
bxxxxxxxxxxxxxxxx E
bxxxxxxxxxxxxxxxx F
bxxxxxxxxxxxxxxxx G
bxxxxxxxxxxxxxxxx H
bxxxxxxxxxxxxxxxx I
bxxxxxxxxxxxxxxxx J
bzzzzzzzzzzzzzzzz (
0&
bzzzzzzzzzz '
bzzzzzzzzzzzzzzzz )
bzzzzzzzzzzzzzzzz *
bzzzzzzzzzzzzzzzz +
bzzzzzzzzzzzzzzzz ,
bzzzzzzzzzzzzzzzz -
bzzzzzzzzzzzzzzzz .
bzzzzzzzzzzzzzzzz /
bzzzzzzzzzzzzzzzz 0
bzzzzzzzzzzzzzzzz 1
0@
bxxxxxxxxxxxxxxxx 2
bxxxxxxxxxxxxxxxx 3
bxxxxxxxxxxxxxxxx 4
bxxxxxxxxxxxxxxxx 5
bxxxxxxxxxxxxxxxx 6
bxxxxxxxxxxxxxxxx 7
bxxxxxxxxxxxxxxxx 8
bxxxxxxxxxxxxxxxx 9
bxxxxxxxxxxxxxxxx :
bxxxxxxxxxxxxxxxx ;
$end
#10000
1!
1@
#20000
0%
0!
0@
#30000
1!
1@
#40000
b000000000000000000 #
b000000000000 $
0!
0@
#50000
1!
1@
b0000000001000110 >
b1111111101101010 ?
#60000
b000000000001100100 #
b000001100100 $
0!
0@
#70000
1!
1@
b0000000001000011 >
b0000000001111010 ?
#80000
0!
0@
#90000
1!
1@
#100000
0!
0@
#110000
1!
1@
#120000
0!
0@
#130000
1!
1@
#140000
0!
0@
#150000
1!
1@
